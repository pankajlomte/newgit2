##byte
x=[10,20,30,40]
print(type(x)) #list type
b=bytes(x)
print(type(b)) #bytes type
print(b[-2])
print(b[0])
print(b[0:2]) #returns some object --> b'\n\x14'
print(b)#returns some object --> b'\n\x14\x1e('
for x in b: print(x) #print all the values from the list(Array)

y=[10,20,30,40,256,258]
#z=bytes(y) #bytes must be in range(0, 256)

# bytes is Immutable

x=[10,20,30,40]
b=bytes(x)
print(type(b))
print(b[0])
#b[0]=120 #'bytes' object does not support item assignment
#So byte value cannot be changed.

##bytearray
x=[10,20,30,40]
b=bytearray(x)
print(type(b))
print(b[0])
#b[0]=256 #byte must be in range(0, 256) # need to check 
print(b[0])
b[2]=255
print(b[2])
#b[5]=11 # bytearray index out of range

##List

l=[]
print(type(l))
l.append(100)
l.append(200)
l.append(300)
l.append(100)
l.append(200.5)
l.append((3,5))
print(l) #prints with insertion order

l.append('pankaj')# Strings can be inserted into same list
print(l)
l.append(None) #None means null
print(l)
l.append('pankaj')
l.append(None)
print(l)
print(l[-1])
#Slicing operator in the list
print(l[0:7])
l.remove(100) #removes the value from list
print(l)
l.append(564446) #Adds the value to list
print(l)
#Step operator in the list
print(l[1:5:2])
#Repetition operator in the list
s=[10,'pankaj',True]
print(s)
s1=s*2 #prints all the values twice in the list
print(s1)
print(type(s1))

##tuple
t=(10,'pankaj',True,None) 
print(t[0])#tuple is immutable
#t[0]=100#'tuple' object does not support item assignment
t=t*2
print(t)
t2=(1,2,[4,6],'pankaj')# 4 elements, 3rd is list object
print(t2)
print(t2[2])

##range()

#Form-1 having only one argument
r=range(10)#prints values from 0 to 9
print(type(r))
print(r) #just gives the range
for i in r: print(i)#For loop--> prints values from 0 to 9
print(r[9])
print(r[-6])
#Slicing operator in range
print(r[-6:-2])#returns  range(4,8)
#Step Operator in range
print(r[0:5:2])
for i in r[0:5:2]: print(i)#prints 0 2 4

#Form-2 having 2 arguments 
print("form-2")
r1=range(1,8) #prints from 1 to 7 (end-1)
print(r1)
for i in r1: print(i)
print(r1[2])
print(r1[-1])
print(r1[4:7]) #Slicing in range Form-2
print(r1[-7:-4:2]) #Step in range Form-2
for i in r1[-7:-4:2]: print(i) #prints 1 3

#Using step i.e. customised range
r2 = range(1,8,2) #step=2 ..so increment by 2.
print(r2) 
for i in r2: print(i) #prints 1,3,5,7.

#set
s={10,20,30,10}
print(s)#prints 10,20,30.Doesn't allow duplicates so 10 is printed once
#print(s[0])#'set' object does not support indexing
#print(s[1:2])#'set' object is not subscriptable
#s.add('pankaj',80,True)#add() takes exactly one argument (3 given)
s.add('pankaj')
s.add(True)
print(s)
s.remove(20)
print(s)

for i in range(10):
    s.add(i)#Adds all 10 numbers from 0 to 9.
print(s)
print('empty set')
s3=set()
print(s3)
print(type(s3))
#Frozenset
s={1,2,0,8}
fs=frozenset(s) #Immutable,cannot add/remove values from set
print(type(fs))
print(fs)
#fs.add(9)#'frozenset' object has no attribute 'add'
#fs.remove(8)#'frozenset' object has no attribute 'remove'

##dict
d={100:'pankaj',200:'lomte',300:'pankaj'}
print(type(d))
print(d)
d1={} #Considered as dictionary only
print(type(d1))
d1[100]='sunny'
print(d1)
d1[200]='leone'
print(d1)
